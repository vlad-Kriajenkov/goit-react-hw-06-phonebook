{"ast":null,"code":"var _jsxFileName = \"/Users/vlad/Documents/GitHub/goit-react-hw-02-phonebook/src/components/Contacts/Contacts.jsx\";\nimport React, { Component } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Contacts extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [],\n      name: \"\",\n      number: \"\"\n    };\n\n    this.handlerChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handelSubmit = e => {\n      e.preventDefault();\n      const {\n        contacts,\n        name,\n        number\n      } = this.state;\n      this.setState(_ref => {\n        let {\n          contacts\n        } = _ref;\n        return {};\n      });\n    };\n  }\n\n  render() {\n    const {\n      name,\n      phone\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n            title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n            required: true,\n            value: name,\n            onChange: this.handlerChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: [\"Phone\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            name: \"number\",\n            pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n            title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n            required: true,\n            value: phone,\n            onChange: this.handlerChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/vlad/Documents/GitHub/goit-react-hw-02-phonebook/src/components/Contacts/Contacts.jsx"],"names":["React","Component","nanoid","Contacts","state","contacts","name","number","handlerChange","e","setState","target","value","handelSubmit","preventDefault","render","phone"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAEA,eAAe,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC9CG,KAD8C,GACtC;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,MAAM,EAAE;AAHF,KADsC;;AAAA,SAO9CC,aAP8C,GAO7BC,CAAD,IAAO;AACrB,WAAKC,QAAL,CAAc;AACZ,SAACD,CAAC,CAACE,MAAF,CAASL,IAAV,GAAiBG,CAAC,CAACE,MAAF,CAASC;AADd,OAAd;AAGD,KAX6C;;AAAA,SAY9CC,YAZ8C,GAY9BJ,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACK,cAAF;AACA,YAAM;AAAET,QAAAA,QAAF;AAAYC,QAAAA,IAAZ;AAAkBC,QAAAA;AAAlB,UAA6B,KAAKH,KAAxC;AAEA,WAAKM,QAAL,CAAc;AAAA,YAAC;AAACL,UAAAA;AAAD,SAAD;AAAA,eAAiB,EAAjB;AAAA,OAAd;AAGD,KAnB6C;AAAA;;AAoB9CU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAET,MAAAA,IAAF;AAAQU,MAAAA;AAAR,QAAkB,KAAKZ,KAA7B;AACA,wBACE;AAAA,6BACE;AAAM,QAAA,MAAM,EAAC,EAAb;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,EAAf;AAAA,0CAEE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,OAAO,EAAC,wHAHV;AAIE,YAAA,KAAK,EAAC,wIAJR;AAKE,YAAA,QAAQ,MALV;AAME,YAAA,KAAK,EAAEE,IANT;AAOE,YAAA,QAAQ,EAAE,KAAKE;AAPjB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAaE;AAAO,UAAA,OAAO,EAAC,EAAf;AAAA,2CAEE;AACE,YAAA,IAAI,EAAC,KADP;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,OAAO,EAAC,wFAHV;AAIE,YAAA,KAAK,EAAC,8FAJR;AAKE,YAAA,QAAQ,MALV;AAME,YAAA,KAAK,EAAEQ,KANT;AAOE,YAAA,QAAQ,EAAE,KAAKR;AAPjB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,eA0BE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAgCD;;AAtD6C","sourcesContent":["import React, { Component } from \"react\";\nimport { nanoid } from \"nanoid\";\n\nexport default class Contacts extends Component {\n  state = {\n    contacts: [],\n    name: \"\",\n    number: \"\",\n  };\n\n  handlerChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n  handelSubmit = (e) => {\n    e.preventDefault();\n    const { contacts, name, number } = this.state;\n\n    this.setState(({contacts}) => ({\n\n    }));\n  };\n  render() {\n    const { name, phone } = this.state;\n    return (\n      <div>\n        <form action=\"\">\n          <label htmlFor=\"\">\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              value={name}\n              onChange={this.handlerChange}\n            />\n          </label>\n          <label htmlFor=\"\">\n            Phone\n            <input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              value={phone}\n              onChange={this.handlerChange}\n            />\n          </label>\n\n          <button type=\"submit\">Add contact</button>\n        </form>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}